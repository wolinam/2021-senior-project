%% F5 누르면 코드 실행 / Blocking 해서 F9누르면 부분 실행 가능
% Blocking 하고 Ctrl+r : 주석 / Ctrl + t : 주석취소

clear all
close all

%% 명령창에!
% 어떤 함수의 설명을 보고 싶다 -> doc 함수명 (ex. doc clear)
% 함수를 찾고 싶다 -> lookfor 함수 (ex. lookfor sin) -> 그런데 구글에서 검색하는 것이 훨씬 good

%% 매트랩은 행렬 기반 연산 처리를 사람이 편하게 하도록 만들어진 프로그램
% 변수들간의 크기를 맞추는 것이 중요!! 아니면 에러남. -> 옥타브에서 했던 것 처럼 1x4 4x1등을 맞춰줘야함
% C언어처럼 int str 등을 선언할 필요없음. 자동으로 해 줌. 그래서 매트랩은 프로그램이 매우 무거움. -> 칩 등에 올리는
% 것에는 부적합. 시뮬레이션하기 좋은 프로그램.
% 변수 등등 한글사용 안됨. 폴더도 다 영어로
% 변수명 radar_resp or radarHeart

%row vector
x=[1 2 3 4] %사이에 쉼표 찍어도 되고 안찍어도 됨. 1x4
%matrix
y=[1 2;3 4] % 2x2
%column vector
z=[1;2;3;4] % 4x1
x_bar = x'

%% 변수 생성2_행렬 생성 및 합치기
s='character'

C1 = [1 2 3;4 5 6] %2x3
B = [7 8;9 0] %2x2
C = [C1 B] %2x5
% 1 2 3 7 8
% 4 5 6 9 0

%에러. 3이랑 2랑 안 맞아서.
%D = [A;B]
% 1 2 3
% 4 5 6
% 7 8
% 9 0

%% 변수 생성3_증감
L0 =[1 2 3 4 5 6 7 8 9 10]
L1 = 1:10 %1부터 10까지
L2 = 1:2:10 %1부터 10까지 2씩 증가

%% linspace_일정한 간격으로 자름
L3 = linspace(0,10,10)
L4 = linspace(0,10,20)
% y = linspace(x1,x2)는 x1과 x2 사이에서 균일한 간격의 점 100개로 구성된 행 벡터를 반환합니다.
% y = linspace(x1,x2,n)은 n개의 점을 생성합니다. 점 사이의 간격은 (x2-x1)/(n-1)입니다.

%% Matrix
% 공간을 생성하고 데이터를 채워넣음
M0=zeros(10,5) %모든 원소 0
M1=ones(7,3) %모든 원소 1
M2=eye(3) %단위행렬
% 1 0 0
% 0 1 0
% 0 0 1
M3=magic(7) %마방진
M4=diag([1 3 5 9]) %대각 행렬

%뽑아내기
basic =[1 2 3 4 5 6 7 8 9]
M5 = diag(basic(3:6))

%% 난수 생성
N1 = rand(3,4) %0부터 1사이 uniform random 값을 갖는 3x4 행렬
N2 = randn(3,4) % 평균이 0, 분산이 1인 gaussian random 값 발생
N3 = randperm(10) %1부터 10까지의 정수들을 무작위로 나열
N4 = randperm(10,3) %1부터 10까지의 정수들 중 3개를 무작위로 나열

%이외에도 쓰고 싶은 기능을 구글에 찾아서 사용하면 됨

%% 변수 내용 바꾸기
C0=[9 -1 4] %원래는 정수였는데
C0(2)=-2+3j %값 하나를 복소수로 바꿨더니 전부 복소수 형태로 바뀜
% 변수안의 값들의 형태가 다 통일되어 있어야함.

C1 = A
C1(2,1)=5
C1(4)=-8
%출력은 1 2 3
%      5 -8 6
% 메모리에는 1 4 2 5 3 6으로 올라감! 매트랩은 column이 우선!
%C1(7) = -4 %크기가 6인데 7을 해서 안됨.
C1(:) %메모리 순서대로 전체 출력

C2(10,:)=linspace(10,-20,5)
C3 =C2(1:3,1:3)
%% 연산
cal0 = ones(3,3)-3
cal1 = 3*ones(3,3)
cal2 = eye(3)+cal0

% 행렬 간 연산
basic0 = [3,4,5;6,7,8]
basic1 = [1,-1;1,-1;1,-1]
cal3 = basic0*basic1 % 나누기는 안됨
cal4 = basic1*basic0
% 행렬의 각 원소끼리 곱하고 나누기
cal5 = cal4./cal1
cal6 = cal4.*cal2

cal7 = M3(4:6,3:5) %4~6번째 row와 3~5번째 col을 빼와라

